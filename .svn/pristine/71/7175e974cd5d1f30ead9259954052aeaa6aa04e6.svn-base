/*
 * <pre> 
 * Class: <b>TetrisGUI</b> 
 * File: TetrisGUI.java 
 * Course: TCSS 305 – Autumn 2015
 * Assignment 6 – Tetris
 * Copyright 2015 Moe Abdipour
 * </pre>
 */

package view;

import menu.MenuBar;
import java.awt.Dimension;
import java.awt.GridLayout;
import java.awt.Image;
import java.awt.event.ComponentAdapter;
import java.awt.event.ComponentEvent;
import java.util.Observable;
import java.util.Observer;
import javax.swing.ImageIcon;
import javax.swing.JFrame;
import javax.swing.JPanel;
import board.BoardPanel;
import board.InfoPanel;


/**
 * <pre>
 * This class is the GUI of the game. It gets updates from the Board class and 
 * communicate with the two boards on the UI (BoardPanel and InfoPanel). The
 * class sets the main frame and the two above panels along with their size and
 * their layouts.
 * </pre>
 * 
 * @author Moe Abdipour
 * @version 11/20/2015
 * @since November 20, 2015
 */
public class TetrisGUI extends Observable implements Observer {

	/**
	 * Represents the block dimension for tetris board. The
	 * first number is the columns and the second number is rows. The
	 * second number makes Y+1 blocks because of the starting row.
	 */
	private static final int[] BOARD_PANEL_DIMENSIONS = {10, 19};

	/**
	 * Represents minimum dimension of the frame.
	 */
	private static final Dimension MAIN_FRAME_MIN_DIMENSION = new Dimension(415, 500);

	/**
	 * Represents height and width of the main icon.
	 */
	private static final int ICON_DIMENSIONS = 30;

	/**
	 * The main frame in which the game is displayed.
	 */
	private final JFrame myMainFrame;

	/**
	 * The panel displaying the board of the game.
	 */
	private final BoardPanel myBoardPanel;

	/**
	 * The panel displaying the information of the current game.
	 */
	private final InfoPanel myInfoPanel;

	/**
	 * The title of the game.
	 */
	private final String TITLE = "Tetris";

	/**
	 * The default image location.
	 */
	private final String IMAGE_LOCATION = "images/";

	/**
	 * The main icon file name.
	 */
	private final String MAIN_ICON_FILE_NAME = "w.gif";

	/**
	 * The constructor that instantiates the main frame and the tow panels. The
	 * method also adds the two panels as the observers of the class. At the end,
	 * the method inits the main frame and starts the game.
	 */
	public TetrisGUI() {
		myMainFrame = new JFrame();
		myBoardPanel = new BoardPanel(BOARD_PANEL_DIMENSIONS[0], BOARD_PANEL_DIMENSIONS[1]);
		myInfoPanel = new InfoPanel(myBoardPanel);

		addObserver(myBoardPanel);
		addObserver(myInfoPanel);
		myBoardPanel.addBoardObserver(myInfoPanel);

		initMainFrame();

		myBoardPanel.start();
	}

	/**
	 * Method that inits the main frame. It sets the main icon for the game and
	 * notifies the observers in case of a change size event.
	 */
	private void initMainFrame() {
		myMainFrame.setTitle(TITLE);
		myMainFrame.setMinimumSize(MAIN_FRAME_MIN_DIMENSION);

		Image localImageIcon = new ImageIcon(IMAGE_LOCATION + MAIN_ICON_FILE_NAME).getImage()
				.getScaledInstance(ICON_DIMENSIONS, ICON_DIMENSIONS, 
						java.awt.Image.SCALE_SMOOTH);
		myMainFrame.setIconImage(localImageIcon);

		myMainFrame.addComponentListener(new ComponentAdapter() {
			@Override
			public void componentResized(final ComponentEvent theEvent) {
				setChanged();
				notifyObservers(theEvent);
			}
		});

		myMainFrame.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);

		final JPanel mainPanel = new JPanel(new GridLayout(1, 2));
		mainPanel.add(myBoardPanel);
		mainPanel.add(myInfoPanel);

		myMainFrame.setJMenuBar(new MenuBar(myBoardPanel, myInfoPanel).getMenu());
		myMainFrame.add(mainPanel);
		myMainFrame.pack();
		myMainFrame.setLocationRelativeTo(null);
		myMainFrame.setVisible(true);
	}

	/**
	 * Ignored update method, handled by the observers.
	 */
	@Override
	public void update(Observable arg0, Object arg1) {
	}
}